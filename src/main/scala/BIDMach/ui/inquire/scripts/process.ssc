def transpose_usernames(){
    val sentsDataDir : String = "/big/livejournal/mercury/destress/sentences2/";
    for(i<-1 to 1131){
        if (i%10 ==1) println(i)
        val a=loadIMat((sentsDataDir + "data%d_usernames.imat.lz4") format i)
        saveIMat((sentsDataDir + "data%d_usernamest.imat.lz4") format i,a.t)
    }
}

def transfer(){
    val sentsDataDir : String = "/big/livejournal/mercury/destress/sentences2/";
    val embedDataDir : String = "/data/livejournal/preds_newtrainfinalfull/";
    val sourceDataDir: String = "/data/livejournal/srcdst/";
    for (i<-621 to 1130){
        //if (i%10 ==1) 
        println(i)
        if (new java.io.File((sourceDataDir + "inds%04d.imat.lz4") format (i-1)).exists){
            val user = loadIMat((sentsDataDir + "data%d_usernamest.imat.lz4") format i)
            val id = loadIMat((sentsDataDir + "data%d.imat") format i)
            val num = loadIMat((sourceDataDir + "inds%04d.imat.lz4") format (i-1))
            saveIMat((embedDataDir + "data%d_usernamest.imat.lz4") format i,user(num))
            saveIMat((embedDataDir + "data%d.imat") format i,id(?,num))
        }
    }
}

//transfer()

def check(i:Int) {
    val sentsDataDir : String = "/data/livejournal/sentences/";
    val embedDataDir : String = "/data/livejournal/preds_newtrainfinalfull/";
    val sourceDataDir: String = "/data/livejournal/srcdst/";
    val sent = loadSMat((sentsDataDir + "data%d_sent.smat.lz4") format i)
    val num = loadIMat((sourceDataDir + "inds%04d.imat.lz4") format (i-1))
    val src = loadSMat((sourceDataDir + "src%04d.smat.lz4") format (i-1))
    println(src(?,0).data.reverse.toList)
    println(sent(?,num(0)).data.toList)
}
    
    
    

        
    